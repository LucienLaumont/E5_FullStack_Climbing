{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [climbers, setClimbers] = useState([]);\n\n  // Effectuer un appel à l'API pour récupérer la liste des grimpeurs\n  useEffect(() => {\n    fetch('http://localhost:8000/api/climbers/') // Assurez-vous que cette route existe dans votre API FastAPI\n    .then(response => response.json()).then(data => setClimbers(data)).catch(error => console.error('Error fetching climbers:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Climbing Profiles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: climbers.map(climber => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [climber.name, \" - \", climber.country]\n      }, climber.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QbbSU7v4EQOIcDCAIo5gThUeblg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","climbers","setClimbers","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","climber","name","country","id","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [climbers, setClimbers] = useState([]);\n\n  // Effectuer un appel à l'API pour récupérer la liste des grimpeurs\n  useEffect(() => {\n    fetch('http://localhost:8000/api/climbers/') // Assurez-vous que cette route existe dans votre API FastAPI\n      .then(response => response.json())\n      .then(data => setClimbers(data))\n      .catch(error => console.error('Error fetching climbers:', error));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Climbing Profiles</h1>\n      <ul>\n        {climbers.map(climber => (\n          <li key={climber.id}>\n            {climber.name} - {climber.country}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,qCAAqC,CAAC,CAAC;IAAA,CAC1CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,WAAW,CAACK,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAAc,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BlB,OAAA;MAAAc,QAAA,EACGX,QAAQ,CAACgB,GAAG,CAACC,OAAO,iBACnBpB,OAAA;QAAAc,QAAA,GACGM,OAAO,CAACC,IAAI,EAAC,KAAG,EAACD,OAAO,CAACE,OAAO;MAAA,GAD1BF,OAAO,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAChB,EAAA,CAvBQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}